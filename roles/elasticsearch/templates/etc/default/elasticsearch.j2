# {{ ansible_managed }}

################################
# Elasticsearch
################################

# Elasticsearch home directory
ES_HOME={{ elasticsearch_home }}

# Elasticsearch Java path
{% if elasticsearch_java_home != '' %}
JAVA_HOME="{{ elasticsearch_java_home }}"
{% else %}
# JAVA_HOME=
{% endif %}

# Elasticsearch configuration directory
ES_PATH_CONF={{ elasticsearch_path_conf }}

# Elasticsearch PID directory
PID_DIR={{ elasticsearch_pid_dir }}

# Additional Java OPTS
{% if elasticsearch_java_heap != '' %}
ES_JAVA_OPTS="{{ elasticsearch_java_heap }}"
{% else %}
# ES_JAVA_OPTS=
{% endif %}

# Configure restart on package upgrade (true, every other setting will lead to not restarting)
RESTART_ON_UPGRADE={{ elasticsearch_restart_on_upgrade }}

################################
# Elasticsearch service
################################

# SysV init.d
#
# The number of seconds to wait before checking if Elasticsearch started successfully as a daemon process
ES_STARTUP_SLEEP_TIME={{ elasticsearch_startup_sleep_time }}

################################
# System properties
################################

# Specifies the maximum file descriptor number that can be opened by this process
# When using Systemd, this setting is ignored and the LimitNOFILE defined in
# /usr/lib/systemd/system/elasticsearch.service takes precedence
MAX_OPEN_FILES={{ elasticsearch_max_open_files }}

# The maximum number of bytes of memory that may be locked into RAM
# Set to "unlimited" if you use the 'bootstrap.memory_lock: true' option
# in elasticsearch.yml.
# When using systemd, LimitMEMLOCK must be set in a unit file such as
# /etc/systemd/system/elasticsearch.service.d/override.conf.
MAX_LOCKED_MEMORY={{ elasticsearch_max_locked_memory }}

# Maximum number of VMA (Virtual Memory Areas) a process can own
# When using Systemd, this setting is ignored and the 'vm.max_map_count'
# property is set at boot time in /usr/lib/sysctl.d/elasticsearch.conf
MAX_MAP_COUNT={{ elasticsearch_max_map_count }}
